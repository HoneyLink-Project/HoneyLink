# HoneyLink Development Environment Configuration Template
#
# This file documents all environment variables required for local development.
# DO NOT commit actual secrets to version control.
#
# Usage:
#   1. Copy this file to `.env` in the project root
#   2. Fill in the values (or fetch from Vault/KMS)
#   3. Source the file: `source .env` (bash) or `. .env` (sh)
#
# Security Note:
#   All secrets should be retrieved from HashiCorp Vault or cloud KMS.
#   Never hardcode production secrets in .env files.

# ========================================
# Vault / KMS Configuration
# ========================================

# HashiCorp Vault address (e.g., https://vault.example.com:8200)
VAULT_ADDR=https://vault.example.com:8200

# Vault authentication method (token, oidc, kubernetes, etc.)
VAULT_AUTH_METHOD=oidc

# Vault namespace (leave empty if not using Enterprise namespaces)
VAULT_NAMESPACE=

# Vault role for secret access (specific to your auth method)
VAULT_ROLE=honeylink-dev

# KMS key ID for encryption at rest (AWS/GCP/Azure)
# Example AWS: arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012
KMS_KEY_ID=


# ========================================
# Authentication & Authorization
# ========================================

# OIDC Provider configuration
OIDC_ISSUER_URL=https://auth.example.com
OIDC_CLIENT_ID=honeylink-client-id
OIDC_AUDIENCE=honeylink-api

# OAuth2 scopes (space-separated)
OIDC_SCOPES="openid profile email honeylink.read honeylink.write"

# JWT signing algorithm (RS256, ES256, etc.)
JWT_ALGORITHM=RS256


# ========================================
# Cryptography Configuration
# ========================================

# Root key material (NEVER commit real keys!)
# This is for local development ONLY. Fetch from Vault in production.
# Generate with: cargo run --bin honeylink-keygen generate-root
HONEYLINK_ROOT_KEY=PLACEHOLDER_USE_VAULT_IN_PRODUCTION

# Key rotation policy (seconds)
KEY_ROTATION_ROOT_INTERVAL=157680000      # 5 years
KEY_ROTATION_DEVICE_INTERVAL=7776000      # 90 days
KEY_ROTATION_SESSION_INTERVAL=86400       # 24 hours

# Grace period for key rotation (seconds)
KEY_GRACE_PERIOD_ROOT=2592000             # 30 days
KEY_GRACE_PERIOD_DEVICE=604800            # 7 days
KEY_GRACE_PERIOD_SESSION=3600             # 1 hour


# ========================================
# Logging & Observability
# ========================================

# Rust log level (error, warn, info, debug, trace)
RUST_LOG=info

# OpenTelemetry configuration
OTEL_EXPORTER_OTLP_ENDPOINT=https://otel-collector.example.com:4317
OTEL_EXPORTER_OTLP_PROTOCOL=grpc
OTEL_SERVICE_NAME=honeylink-dev
OTEL_RESOURCE_ATTRIBUTES="environment=dev,version=0.1.0"

# Tracing sample rate (0.0 to 1.0)
OTEL_TRACES_SAMPLER=parentbased_traceidratio
OTEL_TRACES_SAMPLER_ARG=0.1

# Metrics export interval (seconds)
OTEL_METRIC_EXPORT_INTERVAL=60


# ========================================
# Database Configuration
# ========================================

# PostgreSQL connection
# Format: postgres://user:password@host:port/database
# Use Vault dynamic secrets in production
DATABASE_URL=postgres://honeylink:dev_password@localhost:5432/honeylink_dev

# Connection pool settings
DATABASE_MAX_CONNECTIONS=10
DATABASE_MIN_CONNECTIONS=2
DATABASE_CONNECT_TIMEOUT=30


# ========================================
# Redis / Cache Configuration
# ========================================

# Redis connection
REDIS_URL=redis://localhost:6379/0

# Cache TTL (seconds)
CACHE_TTL_SESSION=3600
CACHE_TTL_DEVICE=86400


# ========================================
# Control Plane API
# ========================================

# Control plane base URL
CONTROL_PLANE_API_URL=https://control.honeylink.local:8443

# mTLS certificate paths (for service-to-service auth)
MTLS_CERT_PATH=/etc/honeylink/certs/client.crt
MTLS_KEY_PATH=/etc/honeylink/certs/client.key
MTLS_CA_PATH=/etc/honeylink/certs/ca.crt


# ========================================
# Session Orchestrator
# ========================================

# Session defaults
SESSION_MAX_DURATION=43200                # 12 hours
SESSION_IDLE_TIMEOUT=1800                 # 30 minutes
SESSION_SLIDING_WINDOW=1800               # 30 minutes

# Session storage backend (redis, postgres, memory)
SESSION_STORAGE_BACKEND=redis


# ========================================
# QoS & Transport
# ========================================

# Default bandwidth allocation (High:Medium:Low)
QOS_BANDWIDTH_ALLOCATION=25:60:15

# FEC strategy (none, light, heavy)
FEC_DEFAULT_STRATEGY=light

# Maximum concurrent streams per session
MAX_STREAMS_PER_SESSION=100


# ========================================
# Physical Adapter
# ========================================

# Supported adapter types (comma-separated)
PHYSICAL_ADAPTERS=wifi6e,wifi7,5g

# Adapter configuration paths
WIFI_ADAPTER_CONFIG=/etc/honeylink/adapters/wifi.yaml
CELLULAR_ADAPTER_CONFIG=/etc/honeylink/adapters/5g.yaml


# ========================================
# Development Tools
# ========================================

# Enable development mode (verbose logging, no auth, etc.)
DEV_MODE=true

# Disable TLS certificate validation (DEV ONLY)
INSECURE_SKIP_VERIFY=true

# Mock external services (true/false)
MOCK_VAULT=false
MOCK_OIDC=false
MOCK_DATABASE=false

# Test data seed (for E2E tests)
TEST_SEED_DATA=true


# ========================================
# Feature Flags
# ========================================

# Enable experimental features
FEATURE_FLAG_TELEMETRY_V2=false
FEATURE_FLAG_WASM_SDK=true
FEATURE_FLAG_THZ_ADAPTER=false


# ========================================
# Platform-Specific
# ========================================

# WSL-specific configuration
WSL_DISTRO_NAME=Ubuntu-22.04
WSL_HOST_IP=172.X.X.X  # Updated by setup-wsl.sh

# Windows host services (if running DBs on Windows host)
WINDOWS_HOST_POSTGRES_PORT=5432
WINDOWS_HOST_REDIS_PORT=6379
