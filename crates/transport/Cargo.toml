[package]
name = "honeylink-transport"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true

[dependencies]
honeylink-core = { path = "../core" }
honeylink-crypto = { path = "../crypto" }
honeylink-qos-scheduler = { path = "../qos-scheduler" }

tokio = { workspace = true }
serde = { workspace = true }
thiserror = { workspace = true }
tracing = { workspace = true }
async-trait = "0.1"
reed-solomon-erasure = "6.0"
crc32fast = "1.4"

# QUIC transport (Pure Rust implementation)
# CRITICAL: Disable default features to avoid aws-lc-sys (C/C++ dependency)
# Use ring-based crypto provider instead (Pure Rust)
quinn = { version = "0.11", default-features = false, features = ["rustls-ring", "runtime-tokio"] }
rustls = { version = "0.23", default-features = false, features = ["ring", "std"] }
rcgen = { version = "0.13", default-features = false, features = ["ring"] }  # Pure Rust certificate generation

# WebRTC transport (Pure Rust implementation)
# Check for C/C++ dependencies during build
webrtc = "0.14"

[dev-dependencies]
proptest = { workspace = true }
